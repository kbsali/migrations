----------------------------
Baleen\\Migrations\\Timeline
----------------------------

.. php:namespace: Baleen\\Migrations

.. php:class:: Timeline

    .. php:attr:: emitter

        protected PublisherInterface

    .. php:method:: upTowards($goalVersion, OptionsInterface $options = null)

        :type $goalVersion: VersionInterface|string
        :param $goalVersion:
        :type $options: OptionsInterface
        :param $options:
        :returns: Sortable A collection of modified versions

    .. php:method:: downTowards($goalVersion, OptionsInterface $options = null)

        :type $goalVersion: VersionInterface|string
        :param $goalVersion:
        :type $options: OptionsInterface
        :param $options:
        :returns: Sortable A collection of modified versions

    .. php:method:: goTowards($goalVersion, OptionsInterface $options = null)

        Runs migrations up/down so that all versions *before and including* the
        specified version are "up" and
        all versions *after* the specified version are "down".

        :param $goalVersion:
        :type $options: OptionsInterface
        :param $options:
        :returns: Linked A collection of versions that were *changed* during the process. Note that this collection may significantly defer from what would be obtained by $this->getVersions()

    .. php:method:: runSingle(VersionInterface $version, OptionsInterface $options, Progress $progress = null)

        :type $version: VersionInterface
        :param $version:
        :type $options: OptionsInterface
        :param $options:
        :type $progress: Progress
        :param $progress: Provides contextual information about current progress if this migration is one of many that are being run in batch.
        :returns: VersionInterface|false

    .. php:method:: __construct(Linked $versions, MigrationBus $migrationBus = null)

        :type $versions: Linked
        :param $versions:
        :type $migrationBus: MigrationBus
        :param $migrationBus: A CommandBus that will be used to run each individual migration.

    .. php:method:: shouldMigrate(VersionInterface $version, OptionsInterface $options)

        Returns true if the operatin is forced, or if the direction is the
        opposite to the state of the migration.

        :type $version: VersionInterface
        :param $version:
        :type $options: OptionsInterface
        :param $options:
        :returns: bool

    .. php:method:: createEmitter()

        Must create and return a default specialised dispatcher.

        :returns: \Baleen\Migrations\Shared\Event\PublisherInterface

    .. php:method:: doRun(MigrationInterface $migration, OptionsInterface $options)

        :type $migration: MigrationInterface
        :param $migration:
        :type $options: OptionsInterface
        :param $options:
        :returns: bool

    .. php:method:: runCollection(VersionInterface $goalVersion, OptionsInterface $options, Linked $collection)

        Executes migrations against a collection

        :type $goalVersion: VersionInterface
        :param $goalVersion:
        :type $options: OptionsInterface
        :param $options:
        :type $collection: Linked
        :param $collection:
        :returns: Linked

    .. php:method:: getVersions()

        getVersions

        :returns: Linked

    .. php:method:: setEventDispatcher(EventDispatcherInterface $eventDispatcher)

        Set the EventDispatcher for the emitter. This is public to allow attaching
        a previously existing EventDispatcher.

        :type $eventDispatcher: EventDispatcherInterface
        :param $eventDispatcher:

    .. php:method:: getEmitter()

        Returns the emitter for the class. Creates one if necessary.

        :returns: PublisherInterface

    .. php:method:: setEmitter(PublisherInterface $emitter)

        Sets the emitter for the class.

        :type $emitter: PublisherInterface
        :param $emitter:

    .. php:method:: getEventDispatcher()

        Get the event dispatcher from the emitter.

        :returns: EventDispatcherInterface
